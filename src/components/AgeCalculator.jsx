import React, { useState } from 'react';

const AgeCalculator = () => {
    const [dob, setDob] = useState({ year: "", month: "", day: "" });
    const [error, setError] = useState("");
    const [result, setResult] = useState("");

    const months = [
        "‡¶ú‡¶æ‡¶®‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø", "‡¶´‡ßá‡¶¨‡ßç‡¶∞‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø", "‡¶Æ‡¶æ‡¶∞‡ßç‡¶ö", "‡¶è‡¶™‡ßç‡¶∞‡¶ø‡¶≤", "‡¶Æ‡ßá", "‡¶ú‡ßÅ‡¶®",
        "‡¶ú‡ßÅ‡¶≤‡¶æ‡¶á", "‡¶Ü‡¶ó‡¶∏‡ßç‡¶ü", "‡¶∏‡ßá‡¶™‡ßç‡¶ü‡ßá‡¶Æ‡ßç‡¶¨‡¶∞", "‡¶Ö‡¶ï‡ßç‡¶ü‡ßã‡¶¨‡¶∞", "‡¶®‡¶≠‡ßá‡¶Æ‡ßç‡¶¨‡¶∞", "‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞"
    ];

    const handleChange = (e) => {
        setDob({ ...dob, [e.target.name]: e.target.value });
        setError("");
        setResult("");
    };

    const calculateAge = () => {
        const { year, month, day } = dob;

        if (!year || !month || !day) {
            setError("‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶∏‡¶ï‡¶≤ ‡¶§‡¶•‡ßç‡¶Ø ‡¶¶‡¶ø‡¶® ‚ö†Ô∏è");
            return;
        }

        const birthDate = new Date(`${year}-${parseInt(month) + 1}-${day}`);
        const today = new Date();

        let years = today.getFullYear() - birthDate.getFullYear();
        let months = today.getMonth() - birthDate.getMonth();
        let days = today.getDate() - birthDate.getDate();

        if (days < 0) {
            months--;
            days += new Date(today.getFullYear(), today.getMonth(), 0).getDate();
        }

        if (months < 0) {
            years--;
            months += 12;
        }

        setResult(`‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡ßü‡¶∏: ${years} ‡¶¨‡¶õ‡¶∞, ${months} ‡¶Æ‡¶æ‡¶∏, ${days} ‡¶¶‡¶ø‡¶® üßì`);
    };

    return (

        <div className=" relative min-h-screen flex items-center justify-center bg-gray-100">


            <a href="https://wa.me/8801933946077"
                target="_blank"
                rel="noopener noreferrer">
                <p className="absolute top-5 right-5 flex items-center space-x-2 text-gray-700 font-semibold">
                    <span>üíª</span>
                    <span>Developed by Azmir Uddin</span>
                </p>
            </a>
            <div className="max-w-md xl:w-full mx-auto mt-10 bg-white p-6 rounded-2xl shadow-lg">
                <h2 className="text-2xl font-bold text-center mb-4">Age Calculator</h2>

                <label className="block mb-1 font-semibold">‡¶ú‡¶®‡ßç‡¶Æ ‡¶∏‡¶æ‡¶≤</label>
                <select
                    name="year"
                    value={dob.year}
                    onChange={handleChange}
                    className="w-full border p-2 rounded mb-4"
                >
                    <option value="">-- ‡¶∏‡¶æ‡¶≤ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶® --</option>
                    {Array.from({ length: 2025 - 1960 + 1 }, (_, i) => 1960 + i).map((year) => (
                        <option key={year} value={year}>{year}</option>
                    ))}
                </select>

                <label className="block mb-1 font-semibold">‡¶ú‡¶®‡ßç‡¶Æ ‡¶Æ‡¶æ‡¶∏</label>
                <select
                    name="month"
                    value={dob.month}
                    onChange={handleChange}
                    className="w-full border p-2 rounded mb-4"
                >
                    <option value="">-- ‡¶Æ‡¶æ‡¶∏ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶® --</option>
                    {months.map((month, index) => (
                        <option key={index} value={index}>{month}</option>
                    ))}
                </select>

                <label className="block mb-1 font-semibold">‡¶ú‡¶®‡ßç‡¶Æ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ</label>
                <select
                    name="day"
                    value={dob.day}
                    onChange={handleChange}
                    className="w-full border p-2 rounded mb-4"
                >
                    <option value="">-- ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶® --</option>
                    {Array.from({ length: 31 }, (_, i) => i + 1).map((day) => (
                        <option key={day} value={day}>{day}</option>
                    ))}
                </select>

                <button
                    onClick={calculateAge}
                    className="w-full bg-gradient-to-r from-orange-400 via-orange-500 to-orange-600 text-white py-2 rounded hover:from-orange-500 hover:to-orange-700 transition-all duration-300"
                >
                    ‡¶´‡¶≤‡¶æ‡¶´‡¶≤ ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®
                </button>

                {error && <p className="text-red-700 mt-3 text-center">{error}</p>}
                {result && <p className="text-green-600 mt-3 text-center font-semibold">{result}</p>}
            </div>
        </div>
    );
};

export default AgeCalculator;